import rospy
import time

from kinematics        import Kinematics
from dynamixel_library import *
from stand_up		   import *
from walking_gaits     import *
from math              import pi,cos,sin,atan2,acos,sqrt,pow


def climb_stairs():
	alpha = 0
	beta = 0
	gama = 0
	K = Kinematics()
	stand_up()
	time.sleep(1)
	parallelGait(0,0,-10,0,0,0)
	gama = gama-10
	time.sleep(1)
	parallelGait(0,0,0,0,0,50)
	time.sleep(1.5)
	singleLeg(0,0,20,alpha,beta,gama,1)
	time.sleep(1)
	singleLeg(30,-50,0,alpha,beta,gama,1)
	time.sleep(1)
	singleLeg(0,0,-10,alpha,beta,gama,1)
	time.sleep(1)
	singleLeg(0,0,20,alpha,beta,gama,2)
	time.sleep(1)
	singleLeg(30,-50,0,alpha,beta,gama,2)
	time.sleep(1)
	singleLeg(0,0,-10,alpha,beta,gama,2)
	time.sleep(1)
	TripodGait(0,20,20,alpha,beta,gama,5)
	time.sleep(1)
	rippleMirror(50,0,100,alpha,beta,gama,1)
	time.sleep(2)
	rippleMirror(50,0,100,alpha,beta,gama,1)
	time.sleep(2)
	Write1Pos(1,2048)
	Write1Pos(4,2048)
	time.sleep(0.5)
	put_down(alpha,beta,gama,1)
	put_down(alpha,beta,gama,2)
	parallelGait(0,0,-10,0,0,0)
	time.sleep(2)
	gama = gama-10
	time.sleep(0.01)
	TripodGait(0,30,20,alpha,beta,-20,6)
	time.sleep(1)
	parallelGait(0,0,0,0,0,50)
	time.sleep(2)
	singleLeg(30,0,100,alpha,beta,gama,3)
	time.sleep(1)
	singleLeg(20,0,100,alpha,beta,gama,3)
	time.sleep(1)
	Write1Pos(7,2648)
	time.sleep(2)
	put_down(alpha,beta,gama,3)
	time.sleep(2)
	singleLeg(0,0,30,alpha,beta,gama,0)
	time.sleep(1)
	singleLeg(0,100,0,alpha,beta,gama,0)
	time.sleep(1)
	singleLeg(0,0,-50,alpha,beta,gama,0)
	time.sleep(1)
	singleLeg(0,0,-20,alpha,beta,gama,0)
	time.sleep(1)
	singleLeg(30,0,100,alpha,beta,gama,4)
	time.sleep(1)
	singleLeg(0,0,100,alpha,beta,gama,4)
	time.sleep(1)
	Write1Pos(10,1448)
	time.sleep(1)
	put_down(alpha,beta,gama,4)
	time.sleep(1)
	singleLeg(0,0,30,alpha,beta,gama,5)
	time.sleep(1)
	singleLeg(0,100,0,alpha,beta,gama,5)
	time.sleep(1)
	singleLeg(0,0,-40,alpha,beta,gama,5)
	time.sleep(1)
	singleLeg(0,0,-20,alpha,beta,gama,5)
	time.sleep(1)
	singleLeg(0,0,-10,alpha,beta,gama,5)
	time.sleep(1)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	rippleMirror(0,0,20,alpha,beta,-20,1)
	time.sleep(2)
	rippleMirror(20,-20,20,alpha,beta,-20,1)
	time.sleep(2)
	rippleMirror(50,0,100,alpha,beta,-20,1)
	time.sleep(2)
	rippleMirror(0,40,100,alpha,beta,-20,1)
	time.sleep(2)
	rippleMirror(0,40,10,alpha,beta,-20,1)
	time.sleep(2)
	Write1Pos(1,2248)
	Write1Pos(4,1848)
	time.sleep(2)
	put_down(alpha,beta,-20,1)
	put_down(alpha,beta,-20,2)
	time.sleep(2)
	parallelGait(0,0,-10,0,0,0)
	time.sleep(2)
	parallelGait(0,0,-10,0,0,0)
	time.sleep(2)
	parallelGait(0,0,0,0,20,0)
	time.sleep(2)
	TripodGait(0,20,15,alpha,beta,-40,6)
	parallelGait(0,0,0,0,0,30)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	singleLeg(0,0,20,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,100,0,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,-65,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,-5,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,20,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,100,0,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,0,-65,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,0,-5,alpha,beta,-40,0)
	time.sleep(1)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	singleLeg(0,0,20,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,50,0,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,-45,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,-5,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,20,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(-30,50,0,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,0,-40,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,0,-5,alpha,beta,-40,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	rippleMirror(0,0,50,alpha,beta,-40,2)
	time.sleep(2)
	rippleMirror(40,-70,0,alpha,beta,-40,2)
	time.sleep(2)
	rippleMirror(0,0,-5,alpha,beta,-40,2)
	time.sleep(2)
	rippleMirror(0,0,20,alpha,beta,-40,1)
	time.sleep(2)
	rippleMirror(-20,70,0,alpha,beta,-40,1)
	time.sleep(2)
	rippleMirror(0,20,0,alpha,beta,-40,1)
	time.sleep(2)
	put_down(alpha,beta,-30,1)
	put_down(alpha,beta,-30,2)


	parallelGait(0,0,0,0,0,20)
	time.sleep(2)
	parallelGait(0,0,0,0,10,0)
	time.sleep(2)
	rippleMirror(0,0,-15,alpha,beta,-40,2)
	rippleMirror(0,0,15,alpha,beta,-40,1)
	time.sleep(2)
	rippleMirror(0,0,-20,alpha,beta,-40,2)
	rippleMirror(0,0,10,alpha,beta,-40,1)
	time.sleep(2)
	rippleMirror(0,0,-20,alpha,beta,-25,2)
	time.sleep(1)
	rippleMirror(0,0,-20,alpha,beta,-20,2)
	time.sleep(1)
	rippleMirror(0,0,-20,alpha,beta,-10,2)
	time.sleep(1)
	rippleMirror(0,0,-20,alpha,beta,-10,2)
	time.sleep(1)
	rippleMirror(0,0,5,alpha,beta,-10,1)
	time.sleep(1)
	rippleMirror(0,0,40,alpha,beta,-10,3)
	time.sleep(2)
	rippleMirror(100,100,20,alpha,beta,-10,3)
	time.sleep(2)
	rippleMirror(0,80,0,alpha,beta,-10,3)
	time.sleep(2)
	rippleMirror(0,0,-70,alpha,beta,-10,3)
	time.sleep(2)
	rippleMirror(0,0,-10,alpha,beta,-10,3)
	time.sleep(3)
	rippleMirror(20,50,100,alpha,beta,-10,2)
	time.sleep(2)
	rippleMirror(50,100,80,alpha,beta,-10,2)
	time.sleep(2)
	rippleMirror(-50,100,0,alpha,beta,-10,2)
	time.sleep(2)
	rippleMirror(-0,70,0,alpha,beta,-10,2)
	time.sleep(2)
	rippleMirror(-30,0,-20,alpha,beta,-10,2)
	time.sleep(2)
	put_down(alpha,beta,-10,3)
	put_down(alpha,beta,-10,4)
	time.sleep(1)
	rippleMirror(0,20,20,alpha,beta,-10,1)
	time.sleep(2)
	rippleMirror(0,70,0,alpha,beta,-10,1)
	time.sleep(2)
	rippleMirror(0,0,-30,alpha,beta,-10,1)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,0,20)
	time.sleep(2)
	time.sleep(1)
	parallelGait(0,0,0,0,20,0)
	time.sleep(1)
	singleLeg(0,0,20,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(-100,40,0,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,-30,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,-5,alpha,beta,-40,5)
	time.sleep(1)
	singleLeg(0,0,20,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(-120,60,0,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,0,-30,alpha,beta,-40,0)
	time.sleep(1)
	singleLeg(0,0,-5,alpha,beta,-40,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(1)
	parallelGait(0,0,0,0,30,0)
	time.sleep(1)
	parallelGait(0,0,0,0,20,0)
	time.sleep(1)
	TripodGait(0,40,20,alpha,beta,-5,3)
	time.sleep(2)
	rippleMirror(0,0,20,alpha,beta,-5,2)
	time.sleep(2)
	rippleMirror(0,-50,0,alpha,beta,-5,2)
	time.sleep(2)
	rippleMirror(0,0,-5,alpha,beta,-5,2)
	time.sleep(2)
	rippleMirror(0,0,-5,alpha,beta,-5,2)
	time.sleep(2)
	singleLeg(50,-50,50,alpha,beta,0,5)
	time.sleep(1)
	singleLeg(0,-30,50,alpha,beta,0,5)
	time.sleep(1)
	singleLeg(0,0,60,alpha,beta,0,5)
	time.sleep(1)
	singleLeg(0,-20,50,alpha,beta,0,5)
	time.sleep(1)
	Write1Pos(13,2748)
	time.sleep(2)
	singleLeg(-20,0,0,alpha,beta,0,5)
	time.sleep(1)
	put_down(0,0,0,5)

	singleLeg(50,-50,50,alpha,beta,0,6)
	time.sleep(1)
	singleLeg(0,-30,50,alpha,beta,0,6)
	time.sleep(1)
	singleLeg(40,0,60,alpha,beta,0,6)
	time.sleep(1)
	singleLeg(0,-20,50,alpha,beta,0,6)
	time.sleep(1)
	Write1Pos(16,1348)
	time.sleep(2)
	singleLeg(-20,0,0,alpha,beta,0,6)
	time.sleep(1)
	put_down(0,0,0,6)
	time.sleep(1)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,30,0)
	time.sleep(2)
	parallelGait(0,0,0,0,0,50)
	time.sleep(2)

if __name__=='__main__':
    try:
        CheckStatus()
        DisableTorqueAllServos()
        pwm_list =[885]*18        # Checks if all 18 servos are connected
        WritePWMLimit(pwm_list) # Modify PWM Limit (torque must be off)
        K = Kinematics()        # Creates Kinematics class object "K"
        EnableTorqueAllServos() # Enable Torque, duuh
        #W = WalkingGaits()

        climb_stairs()  # tripod gait that expects keyboard press between steps
    except rospy.ROSInterruptException :
        portHandler.closePort()
